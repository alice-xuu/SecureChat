{"ast":null,"code":"export function arrayBufferToString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n\n  for (var i = 0; i < bytes.byteLength; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n\n  var base64 = window.btoa(binary); // convert unicode string to string where each 16-bit unit occupies one byte\n\n  const codeUnits = new Uint16Array(base64.length);\n\n  for (let i = 0; i < codeUnits.length; i++) {\n    codeUnits[i] = base64.charCodeAt(i);\n  }\n\n  return btoa(String.fromCharCode(...new Uint8Array(codeUnits.buffer)));\n}\nexport function stringToArrayBuffer(string) {\n  const binary = atob(string);\n  const bytes = new Uint8Array(binary.length);\n\n  for (let i = 0; i < bytes.length; i++) {\n    bytes[i] = binary.charCodeAt(i);\n  }\n\n  var base64 = String.fromCharCode(...new Uint16Array(bytes.buffer));\n  var binStr = window.atob(base64);\n  var bytes2 = new Uint8Array(binStr.length);\n\n  for (var i = 0; i < binStr.length; i++) {\n    bytes2[i] = binStr.charCodeAt(i);\n  }\n\n  return bytes2.buffer;\n}\nexport function getParameterByName(name) {\n  let url = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\nexport function getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(';');\n\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n\n    while (c.charAt(0) == ' ') {\n      c = c.substring(1);\n    }\n\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n\n  return \"\";\n}\nexport async function decryptMessage(privateKey, ciphertext) {\n  let decrypted = await window.crypto.subtle.decrypt({\n    name: \"RSA-OAEP\"\n  }, privateKey, ciphertext);\n  let decoder = new TextDecoder(\"utf-8\");\n  let plainText = decoder.decode(decrypted);\n  return plainText;\n}\nexport async function sign(privateKey, digest) {\n  return await window.crypto.subtle.sign({\n    name: \"RSA-PSS\",\n    saltLength: 32\n  }, privateKey, digest);\n}\nexport async function digestMessage(message) {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(message);\n  return await crypto.subtle.digest('SHA-256', data);\n}\nexport async function verifyDigest(publicKey, signature, digest) {\n  return await window.crypto.subtle.verify({\n    name: \"RSA-PSS\",\n    saltLength: 32\n  }, publicKey, signature, digest);\n}\nexport async function post(url, body) {\n  let res = await fetch(url, {\n    method: 'POST',\n    body\n  });\n  console.log(res);\n  return await res.json();\n}\nexport async function get(url) {\n  let res = await fetch(url);\n  return await res.json();\n}\nexport function timestampToTimeString(time) {\n  let dateTime = new Date(time);\n  return dateTime.toLocaleTimeString([], {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n}","map":{"version":3,"sources":["/Users/AliceXu/Desktop/uni/Y4 Semester 1/INFO2222/INFO2222-Assignment-1-main/client/src/Helpers.js"],"names":["arrayBufferToString","buffer","binary","bytes","Uint8Array","i","byteLength","String","fromCharCode","base64","window","btoa","codeUnits","Uint16Array","length","charCodeAt","stringToArrayBuffer","string","atob","binStr","bytes2","getParameterByName","name","url","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","getCookie","cname","decodedCookie","document","cookie","ca","split","c","charAt","substring","indexOf","decryptMessage","privateKey","ciphertext","decrypted","crypto","subtle","decrypt","decoder","TextDecoder","plainText","decode","sign","digest","saltLength","digestMessage","message","encoder","TextEncoder","data","encode","verifyDigest","publicKey","signature","verify","post","body","res","fetch","method","console","log","json","get","timestampToTimeString","time","dateTime","Date","toLocaleTimeString","year","month","day","hour","minute"],"mappings":"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","sourcesContent":["export function arrayBufferToString( buffer ) {\n    var binary = '';\n    var bytes = new Uint8Array( buffer );\n    for (var i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode( bytes[ i ] );\n    }\n    var base64 = window.btoa( binary );\n    // convert unicode string to string where each 16-bit unit occupies one byte\n    const codeUnits = new Uint16Array(base64.length);\n    for (let i = 0; i < codeUnits.length; i++) {\n        codeUnits[i] = base64.charCodeAt(i);\n    }\n    return btoa(String.fromCharCode(...new Uint8Array(codeUnits.buffer)));\n}\n\n\nexport function stringToArrayBuffer(string) {\n\n    const binary = atob(string);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < bytes.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    var base64 = String.fromCharCode(...new Uint16Array(bytes.buffer));\n\n    var binStr =  window.atob(base64);\n    var bytes2 = new Uint8Array(binStr.length);\n    for (var i = 0; i < binStr.length; i++)        {\n        bytes2[i] = binStr.charCodeAt(i);\n    }\n    return bytes2.buffer;\n}\n\nexport function getParameterByName(name, url = window.location.href) {\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nexport function getCookie(cname) {\n    let name = cname + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(';');\n    for(let i = 0; i <ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}\n\nexport async function decryptMessage(privateKey, ciphertext) {\n    let decrypted = await window.crypto.subtle.decrypt(\n        {\n            name: \"RSA-OAEP\"\n        },\n        privateKey,\n        ciphertext\n    );\n\n    let decoder = new TextDecoder(\"utf-8\");\n    let plainText = decoder.decode(decrypted);\n    return plainText;\n}\n\nexport async function sign(privateKey, digest) {\n    return await window.crypto.subtle.sign(\n        {\n            name: \"RSA-PSS\",\n            saltLength: 32,\n        },\n        privateKey,\n        digest\n    )\n}\n\nexport async function digestMessage(message) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(message);\n    return await crypto.subtle.digest('SHA-256', data);\n}\n\nexport async function verifyDigest(publicKey, signature, digest) {\n    return await window.crypto.subtle.verify(\n            {\n                name: \"RSA-PSS\",\n                saltLength: 32,\n            },\n            publicKey,\n            signature,\n            digest\n        )\n}\n\nexport async function post(url, body){\n    let res = await fetch(url, {\n        method: 'POST',\n        body\n    });\n    console.log(res)\n    return await res.json();\n}\n\nexport async function get(url){\n    let res = await fetch(url);\n    return await res.json();\n}\n\nexport function timestampToTimeString(time) {\n    let dateTime = new Date(time);\n    return dateTime.toLocaleTimeString([], {year: 'numeric', month: 'numeric', day: 'numeric', hour: '2-digit', minute: '2-digit'});\n}"]},"metadata":{},"sourceType":"module"}