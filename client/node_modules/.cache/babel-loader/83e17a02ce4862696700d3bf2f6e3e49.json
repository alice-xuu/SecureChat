{"ast":null,"code":"var _jsxFileName = \"/Users/AliceXu/Desktop/uni/Y4 Semester 1/INFO2222/INFO2222-Assignment-1-main/client/src/Register.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Button } from 'react-bootstrap';\nimport { useState } from 'react';\nimport * as encryption from './encryption';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const [validated, setValidated] = useState(false);\n  const [invalidUserPass, setInvalidUserPass] = useState(false);\n\n  function handleSubmit(e) {\n    const form = e.currentTarget;\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (form.checkValidity()) {\n      let username = e.nativeEvent.target[0].value;\n      let password = e.nativeEvent.target[1].value;\n      handleAsyncMethods(username, password);\n    } else {\n      setValidated(true);\n    }\n  }\n\n  async function handleAsyncMethods(username, password) {\n    var keys = await encryption.generateRSA();\n    let privateKey = await encryption.exportKey(keys.privateKey);\n    let publicKey = await encryption.exportKey(keys.publicKey);\n    var keysSign = await encryption.generateRSASign();\n    let privateKeySign = await encryption.exportKey(keysSign.privateKey);\n    let publicKeySign = await encryption.exportKey(keysSign.publicKey);\n    let formData = new FormData();\n    formData.append(\"username\", username);\n    formData.append(\"password\", password);\n    formData.append(\"pk\", JSON.stringify(publicKey));\n    formData.append(\"pkSign\", JSON.stringify(publicKeySign));\n    localStorage.setItem(username, JSON.stringify(privateKey));\n    localStorage.setItem(username + \"sign\", JSON.stringify(privateKeySign));\n    const response = await fetch('/register', {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await response.json();\n\n    if (data.success) {\n      window.location.href = \"/friends\";\n    } else {\n      setInvalidUserPass(true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-5\",\n      style: {\n        width: \"500px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        validated: validated,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter username\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please enter a username.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please enter a password.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            style: {\n              display: invalidUserPass ? \"initial\" : \"none\"\n            },\n            children: \"Username or password already taken.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"q+AxqsrQJI8lOMnskqNVVpETAVU=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/AliceXu/Desktop/uni/Y4 Semester 1/INFO2222/INFO2222-Assignment-1-main/client/src/Register.js"],"names":["Form","Button","useState","encryption","Register","validated","setValidated","invalidUserPass","setInvalidUserPass","handleSubmit","e","form","currentTarget","preventDefault","stopPropagation","checkValidity","username","nativeEvent","target","value","password","handleAsyncMethods","keys","generateRSA","privateKey","exportKey","publicKey","keysSign","generateRSASign","privateKeySign","publicKeySign","formData","FormData","append","JSON","stringify","localStorage","setItem","response","fetch","method","body","data","json","success","window","location","href","width","display"],"mappings":"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","sourcesContent":["import { Form, Button } from 'react-bootstrap'\nimport { useState } from 'react'\nimport * as encryption from './encryption'\n\nexport default function Register() {\n    \n    const [validated, setValidated] = useState(false);\n    const [invalidUserPass, setInvalidUserPass] = useState(false);\n\n    function handleSubmit(e) {\n        const form = e.currentTarget;\n        e.preventDefault();\n        e.stopPropagation();\n        \n        if (form.checkValidity()) {\n            let username = e.nativeEvent.target[0].value;\n            let password = e.nativeEvent.target[1].value;\n\n            handleAsyncMethods(username, password);\n        }\n        else {\n            setValidated(true);\n        }\n        \n    }\n\n    async function handleAsyncMethods(username, password){\n        var keys = await encryption.generateRSA();\n        let privateKey = await encryption.exportKey(keys.privateKey);\n        let publicKey = await encryption.exportKey(keys.publicKey);\n    \n        var keysSign = await encryption.generateRSASign();\n        let privateKeySign = await encryption.exportKey(keysSign.privateKey);\n        let publicKeySign = await encryption.exportKey(keysSign.publicKey);\n    \n        let formData = new FormData();\n        formData.append(\"username\", username);\n        formData.append(\"password\", password);\n        formData.append(\"pk\", JSON.stringify(publicKey));\n        formData.append(\"pkSign\", JSON.stringify(publicKeySign));\n    \n        localStorage.setItem(username, JSON.stringify(privateKey));\n        localStorage.setItem(username + \"sign\", JSON.stringify(privateKeySign));\n    \n        const response = await fetch('/register', {\n            method: \"POST\",\n            body: formData\n        });\n    \n        const data = await response.json();\n        if(data.success){\n            window.location.href = \"/friends\"\n        }\n        else{\n            setInvalidUserPass(true);\n        }\n    \n    }\n\n    return (\n        <div className=\"d-flex justify-content-center mt-5\">\n            <div className=\"border p-5\" style={{width: \"500px\"}}>\n                <h3>\n                    Register\n                </h3>\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter username\" required/>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please enter a username.\n                        </Form.Control.Feedback>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" required/>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please enter a password.\n                        </Form.Control.Feedback>\n                        <div className=\"invalid-feedback\" style={{ display: invalidUserPass ? \"initial\": \"none\"}}>\n                            Username or password already taken.\n                        </div>\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}