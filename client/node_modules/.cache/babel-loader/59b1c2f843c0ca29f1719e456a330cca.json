{"ast":null,"code":"var _jsxFileName = \"/Users/AliceXu/Desktop/uni/Y4 Semester 1/INFO2222/INFO2222-Assignment-1-main/client/src/Chat.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from 'react';\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport { getCookie, get, post } from './Helpers';\nimport * as encryption from './encryption';\nimport Friends from \"./Friends\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const [chatMessages, setChatMessages] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const receiver = searchParams.get(\"name\");\n  const username = getCookie(\"username\");\n  const navigate = useNavigate();\n  let symmKey = useRef('');\n  let privateKey = useRef('');\n\n  function formatText(name, plaintext, msgTime) {\n    let dateTime = new Date(msgTime);\n    let timeStr = dateTime.toLocaleDateString() + \" \" + dateTime.toLocaleTimeString();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: scrollBottomChat,\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: [name, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), \"\\xA0\", plaintext, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        style: {\n          \"fontSize\": \"0.5em\"\n        },\n        children: timeStr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 53\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 108\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n  function goBack() {\n    setChatMessages([]);\n    navigate(-1);\n  }\n\n  async function getKeys() {\n    const localStorageKey = username + receiver + 'sk';\n    symmKey.current = localStorage.getItem(localStorageKey);\n\n    if (!symmKey.current) {\n      privateKey.current = localStorage.getItem(username);\n      privateKey.current = await encryption.importPrivateKey(privateKey.current);\n      let data = await get(`/getSymmKey?receiver=${receiver}`);\n      const symmKeyObj = new encryption.EncryptedMessage(data.key);\n      symmKey.current = await symmKeyObj.decrypt(privateKey.current);\n      localStorage.setItem(localStorageKey, symmKey.current);\n    }\n\n    symmKey.current = await encryption.importAESKey(symmKey.current);\n  }\n\n  async function getStoredMessages() {\n    let data = await get(`/getStoredMessages?name=${receiver}`);\n\n    for (let message of data.messages) {\n      let encMsgObj = new encryption.EncryptedMessage(message[3]);\n      let plainText = await encMsgObj.decrypt(symmKey.current); // 1: sender, 3: message, 4: timestamp\n\n      await updateChat(message[1], plainText, message[4]);\n    }\n  }\n\n  async function updateChat(name, message, msgTime) {\n    let text = formatText(name, message, msgTime);\n    setChatMessages(prev => prev.concat([text]));\n  }\n\n  function scrollBottomChat() {\n    let elem = document.getElementById('chatBox');\n    elem.scrollTop = elem.scrollHeight;\n  }\n\n  async function getLiveMessages() {\n    while (true) {\n      let encMsg = await get(`/getLiveMessages?sender=${receiver}`);\n      let msgObj = new encryption.EncryptedMessage(encMsg.message);\n      let msg = await msgObj.decrypt(symmKey.current);\n      await updateChat(receiver, msg, parseInt(encMsg.msgTime));\n    }\n  }\n\n  async function sendMessage(e) {\n    e.preventDefault();\n    let msg = e.nativeEvent.target[0].value;\n    e.target.reset();\n    if (!msg) return;\n    const msgTime = Date.now();\n    let msgObj = new encryption.PlaintextMessage(msg);\n    const encMsg = await msgObj.encrypt(symmKey.current);\n    const form = new FormData();\n    form.append(\"ct\", encMsg);\n    form.append(\"receiver\", receiver);\n    form.append(\"msgTime\", msgTime);\n    await post(\"/sendMessage\", form);\n    await updateChat(username, msg, msgTime);\n  }\n\n  useEffect(() => {\n    async function init() {\n      await getKeys();\n      await getStoredMessages();\n      await getLiveMessages();\n    }\n\n    init();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Friends, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center mt-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-8\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Chatting With \", receiver]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-sm-4\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outline-dark\",\n                  style: {\n                    float: 'right'\n                  },\n                  onClick: goBack,\n                  children: \"Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-3 border rounded\",\n                id: \"chatBox\",\n                style: {\n                  height: '300px',\n                  'overflowY': 'scroll'\n                },\n                children: chatMessages.map(e => e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: sendMessage,\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"row form-group mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-sm-8\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"Send Message\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"col-sm-4\",\n                    variant: \"outline-dark\",\n                    type: \"submit\",\n                    style: {\n                      float: 'right'\n                    },\n                    children: \"Send\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"lAeiz8ho8ToB2/CRcaCdFRxjTUc=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/AliceXu/Desktop/uni/Y4 Semester 1/INFO2222/INFO2222-Assignment-1-main/client/src/Chat.js"],"names":["useEffect","useRef","useState","Button","Col","Container","Form","Row","useSearchParams","useNavigate","getCookie","get","post","encryption","Friends","Chat","chatMessages","setChatMessages","searchParams","setSearchParams","receiver","username","navigate","symmKey","privateKey","formatText","name","plaintext","msgTime","dateTime","Date","timeStr","toLocaleDateString","toLocaleTimeString","scrollBottomChat","goBack","getKeys","localStorageKey","current","localStorage","getItem","importPrivateKey","data","symmKeyObj","EncryptedMessage","key","decrypt","setItem","importAESKey","getStoredMessages","message","messages","encMsgObj","plainText","updateChat","text","prev","concat","elem","document","getElementById","scrollTop","scrollHeight","getLiveMessages","encMsg","msgObj","msg","parseInt","sendMessage","e","preventDefault","nativeEvent","target","value","reset","now","PlaintextMessage","encrypt","form","FormData","append","init","width","float","height","map"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAAQC,MAAR,EAAgBC,GAAhB,EAAqBC,SAArB,EAAgCC,IAAhC,EAAsCC,GAAtC,QAAgD,iBAAhD;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,kBAA7C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,WAArC;AACA,OAAO,KAAKC,UAAZ,MAA4B,cAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCX,eAAe,EAAvD;AACA,QAAMY,QAAQ,GAAGF,YAAY,CAACP,GAAb,CAAiB,MAAjB,CAAjB;AACA,QAAMU,QAAQ,GAAGX,SAAS,CAAC,UAAD,CAA1B;AACA,QAAMY,QAAQ,GAAGb,WAAW,EAA5B;AAEA,MAAIc,OAAO,GAAGtB,MAAM,CAAC,EAAD,CAApB;AACA,MAAIuB,UAAU,GAAGvB,MAAM,CAAC,EAAD,CAAvB;;AAEA,WAASwB,UAAT,CAAoBC,IAApB,EAA0BC,SAA1B,EAAqCC,OAArC,EAA6C;AACzC,QAAIC,QAAQ,GAAG,IAAIC,IAAJ,CAASF,OAAT,CAAf;AACA,QAAIG,OAAO,GAAGF,QAAQ,CAACG,kBAAT,KAAgC,GAAhC,GAAsCH,QAAQ,CAACI,kBAAT,EAApD;AACA,wBACI;AAAK,MAAA,GAAG,EAAEC,gBAAV;AAAA,8BACI;AAAA,mBAAIR,IAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,UACyBC,SADzB,eACmC;AAAA;AAAA;AAAA;AAAA,cADnC,eACwC;AAAO,QAAA,KAAK,EAAE;AAAE,sBAAY;AAAd,SAAd;AAAA,kBAAuCI;AAAvC;AAAA;AAAA;AAAA;AAAA,cADxC,eAC+F;AAAA;AAAA;AAAA;AAAA,cAD/F;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,WAASI,MAAT,GAAiB;AACblB,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAK,IAAAA,QAAQ,CAAC,CAAC,CAAF,CAAR;AACH;;AAED,iBAAec,OAAf,GAAyB;AACrB,UAAMC,eAAe,GAAGhB,QAAQ,GAACD,QAAT,GAAkB,IAA1C;AACAG,IAAAA,OAAO,CAACe,OAAR,GAAkBC,YAAY,CAACC,OAAb,CAAqBH,eAArB,CAAlB;;AACA,QAAG,CAACd,OAAO,CAACe,OAAZ,EAAoB;AAChBd,MAAAA,UAAU,CAACc,OAAX,GAAqBC,YAAY,CAACC,OAAb,CAAqBnB,QAArB,CAArB;AACAG,MAAAA,UAAU,CAACc,OAAX,GAAqB,MAAMzB,UAAU,CAAC4B,gBAAX,CAA4BjB,UAAU,CAACc,OAAvC,CAA3B;AACA,UAAII,IAAI,GAAG,MAAM/B,GAAG,CAAE,wBAAuBS,QAAS,EAAlC,CAApB;AACA,YAAMuB,UAAU,GAAG,IAAI9B,UAAU,CAAC+B,gBAAf,CAAgCF,IAAI,CAACG,GAArC,CAAnB;AACAtB,MAAAA,OAAO,CAACe,OAAR,GAAkB,MAAMK,UAAU,CAACG,OAAX,CAAmBtB,UAAU,CAACc,OAA9B,CAAxB;AACAC,MAAAA,YAAY,CAACQ,OAAb,CAAqBV,eAArB,EAAsCd,OAAO,CAACe,OAA9C;AAEH;;AACDf,IAAAA,OAAO,CAACe,OAAR,GAAkB,MAAMzB,UAAU,CAACmC,YAAX,CAAwBzB,OAAO,CAACe,OAAhC,CAAxB;AACH;;AAED,iBAAeW,iBAAf,GAAmC;AAC/B,QAAIP,IAAI,GAAG,MAAM/B,GAAG,CAAE,2BAA0BS,QAAS,EAArC,CAApB;;AAEA,SAAK,IAAI8B,OAAT,IAAoBR,IAAI,CAACS,QAAzB,EAAmC;AAC/B,UAAIC,SAAS,GAAG,IAAIvC,UAAU,CAAC+B,gBAAf,CAAgCM,OAAO,CAAC,CAAD,CAAvC,CAAhB;AACA,UAAIG,SAAS,GAAG,MAAMD,SAAS,CAACN,OAAV,CAAkBvB,OAAO,CAACe,OAA1B,CAAtB,CAF+B,CAG/B;;AACA,YAAMgB,UAAU,CAACJ,OAAO,CAAC,CAAD,CAAR,EAAaG,SAAb,EAAwBH,OAAO,CAAC,CAAD,CAA/B,CAAhB;AACH;AACJ;;AAED,iBAAeI,UAAf,CAA0B5B,IAA1B,EAAgCwB,OAAhC,EAAyCtB,OAAzC,EAAiD;AAC7C,QAAI2B,IAAI,GAAG9B,UAAU,CAACC,IAAD,EAAOwB,OAAP,EAAgBtB,OAAhB,CAArB;AACAX,IAAAA,eAAe,CAACuC,IAAI,IAAIA,IAAI,CAACC,MAAL,CAAY,CAACF,IAAD,CAAZ,CAAT,CAAf;AACH;;AAED,WAASrB,gBAAT,GAA2B;AACvB,QAAIwB,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAX;AACAF,IAAAA,IAAI,CAACG,SAAL,GAAiBH,IAAI,CAACI,YAAtB;AACH;;AAED,iBAAeC,eAAf,GAAgC;AAC5B,WAAM,IAAN,EAAW;AACP,UAAIC,MAAM,GAAG,MAAMrD,GAAG,CAAE,2BAA0BS,QAAS,EAArC,CAAtB;AACA,UAAI6C,MAAM,GAAG,IAAIpD,UAAU,CAAC+B,gBAAf,CAAgCoB,MAAM,CAACd,OAAvC,CAAb;AACA,UAAIgB,GAAG,GAAG,MAAMD,MAAM,CAACnB,OAAP,CAAevB,OAAO,CAACe,OAAvB,CAAhB;AACA,YAAMgB,UAAU,CAAClC,QAAD,EAAW8C,GAAX,EAAgBC,QAAQ,CAACH,MAAM,CAACpC,OAAR,CAAxB,CAAhB;AACH;AACJ;;AAED,iBAAewC,WAAf,CAA2BC,CAA3B,EAA8B;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIJ,GAAG,GAAGG,CAAC,CAACE,WAAF,CAAcC,MAAd,CAAqB,CAArB,EAAwBC,KAAlC;AACAJ,IAAAA,CAAC,CAACG,MAAF,CAASE,KAAT;AACA,QAAG,CAACR,GAAJ,EAAS;AAET,UAAMtC,OAAO,GAAGE,IAAI,CAAC6C,GAAL,EAAhB;AACA,QAAIV,MAAM,GAAG,IAAIpD,UAAU,CAAC+D,gBAAf,CAAgCV,GAAhC,CAAb;AACA,UAAMF,MAAM,GAAG,MAAMC,MAAM,CAACY,OAAP,CAAetD,OAAO,CAACe,OAAvB,CAArB;AAEA,UAAMwC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,IAAZ,EAAkBhB,MAAlB;AACAc,IAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwB5D,QAAxB;AACA0D,IAAAA,IAAI,CAACE,MAAL,CAAY,SAAZ,EAAuBpD,OAAvB;AAEA,UAAMhB,IAAI,CAAC,cAAD,EAAiBkE,IAAjB,CAAV;AACA,UAAMxB,UAAU,CAACjC,QAAD,EAAW6C,GAAX,EAAgBtC,OAAhB,CAAhB;AAEH;;AAED5B,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeiF,IAAf,GAAsB;AAClB,YAAM7C,OAAO,EAAb;AACA,YAAMa,iBAAiB,EAAvB;AACA,YAAMc,eAAe,EAArB;AACH;;AACDkB,IAAAA,IAAI;AACP,GAPQ,EAON,EAPM,CAAT;AASA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,GAAD;AAAA,8BACI,QAAC,GAAD;AAAA,+BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD;AAAA,+BACR;AAAK,UAAA,SAAS,EAAC,oCAAf;AAAA,iCACI;AAAK,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAE;AAAR,aAAZ;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA,uCACI;AAAA,+CAAmB9D,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA,uCACI,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAC,cAAhB;AAA+B,kBAAA,KAAK,EAAE;AAAC+D,oBAAAA,KAAK,EAAE;AAAR,mBAAtC;AAAwD,kBAAA,OAAO,EAAEhD,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eASI;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAoC,gBAAA,EAAE,EAAC,SAAvC;AAAiD,gBAAA,KAAK,EAAE;AAACiD,kBAAAA,MAAM,EAAE,OAAT;AAAkB,+BAAa;AAA/B,iBAAxD;AAAA,0BACKpE,YAAY,CAACqE,GAAb,CAAiBhB,CAAC,IAAIA,CAAtB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBATJ,eAcI;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACI,QAAC,IAAD;AAAM,gBAAA,QAAQ,EAAED,WAAhB;AAAA,uCACI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,SAAS,EAAC,qBAAtB;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,UAAf;AAAA,2CACI,QAAC,IAAD,CAAM,OAAN;AAAc,sBAAA,IAAI,EAAC,MAAnB;AAA0B,sBAAA,WAAW,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAII,QAAC,MAAD;AAAQ,oBAAA,SAAS,EAAC,UAAlB;AAA6B,oBAAA,OAAO,EAAC,cAArC;AAAoD,oBAAA,IAAI,EAAC,QAAzD;AAAkE,oBAAA,KAAK,EAAE;AAACe,sBAAAA,KAAK,EAAE;AAAR,qBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH;;GA5IQpE,I;UAEmCP,e,EAGvBC,W;;;KALZM,I;AA8IT,eAAeA,IAAf","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport {Button, Col, Container, Form, Row} from 'react-bootstrap';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport { getCookie, get, post } from './Helpers';\nimport * as encryption from './encryption';\nimport Friends from \"./Friends\";\n\nfunction Chat() {\n    const [chatMessages, setChatMessages] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const receiver = searchParams.get(\"name\");\n    const username = getCookie(\"username\");\n    const navigate = useNavigate();\n\n    let symmKey = useRef('');\n    let privateKey = useRef('');\n    \n    function formatText(name, plaintext, msgTime){\n        let dateTime = new Date(msgTime);\n        let timeStr = dateTime.toLocaleDateString() + \" \" + dateTime.toLocaleTimeString();\n        return (\n            <div ref={scrollBottomChat}>\n                <b>{name}:</b>&nbsp;{plaintext}<br/><small style={{ \"fontSize\": \"0.5em\"}}>{timeStr}</small><br/>\n            </div>\n        )\n    }\n\n    function goBack(){\n        setChatMessages([]);\n        navigate(-1);\n    }\n\n    async function getKeys() {\n        const localStorageKey = username+receiver+'sk';\n        symmKey.current = localStorage.getItem(localStorageKey);\n        if(!symmKey.current){\n            privateKey.current = localStorage.getItem(username);\n            privateKey.current = await encryption.importPrivateKey(privateKey.current);\n            let data = await get(`/getSymmKey?receiver=${receiver}`);\n            const symmKeyObj = new encryption.EncryptedMessage(data.key);\n            symmKey.current = await symmKeyObj.decrypt(privateKey.current);\n            localStorage.setItem(localStorageKey, symmKey.current);\n            \n        }\n        symmKey.current = await encryption.importAESKey(symmKey.current);\n    }\n\n    async function getStoredMessages() {\n        let data = await get(`/getStoredMessages?name=${receiver}`);\n\n        for (let message of data.messages) {\n            let encMsgObj = new encryption.EncryptedMessage(message[3]);\n            let plainText = await encMsgObj.decrypt(symmKey.current);\n            // 1: sender, 3: message, 4: timestamp\n            await updateChat(message[1], plainText, message[4]);\n        }\n    }\n\n    async function updateChat(name, message, msgTime){\n        let text = formatText(name, message, msgTime);\n        setChatMessages(prev => prev.concat([text]));\n    }\n    \n    function scrollBottomChat(){\n        let elem = document.getElementById('chatBox');\n        elem.scrollTop = elem.scrollHeight;\n    }\n\n    async function getLiveMessages(){\n        while(true){\n            let encMsg = await get(`/getLiveMessages?sender=${receiver}`);\n            let msgObj = new encryption.EncryptedMessage(encMsg.message);\n            let msg = await msgObj.decrypt(symmKey.current);\n            await updateChat(receiver, msg, parseInt(encMsg.msgTime));\n        }\n    }\n    \n    async function sendMessage(e) {\n        e.preventDefault();\n        let msg = e.nativeEvent.target[0].value;\n        e.target.reset();\n        if(!msg) return;\n        \n        const msgTime = Date.now()\n        let msgObj = new encryption.PlaintextMessage(msg);\n        const encMsg = await msgObj.encrypt(symmKey.current);\n\n        const form = new FormData();\n        form.append(\"ct\", encMsg);\n        form.append(\"receiver\", receiver);\n        form.append(\"msgTime\", msgTime);\n\n        await post(\"/sendMessage\", form);\n        await updateChat(username, msg, msgTime);\n\n    }\n\n    useEffect(() => {\n        async function init() {\n            await getKeys();\n            await getStoredMessages();\n            await getLiveMessages();\n        } \n        init()\n    }, []);\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <Friends/>\n                </Col>\n                <Col>\n        <div className=\"d-flex justify-content-center mt-5\">\n            <div style={{width: '100%'}}>\n                <div className=\"row mb-3\">\n                    <div className=\"col-sm-8\">\n                        <h3>Chatting With {receiver}</h3>\n                    </div>\n                    <div className=\"col-sm-4\">\n                        <Button variant=\"outline-dark\" style={{float: 'right'}} onClick={goBack}>Back</Button>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"p-3 border rounded\" id=\"chatBox\" style={{height: '300px', 'overflowY': 'scroll'}}>\n                        {chatMessages.map(e => e)}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <Form onSubmit={sendMessage}>\n                        <Form.Group className=\"row form-group mt-2\">\n                            <div className=\"col-sm-8\">\n                                <Form.Control type=\"text\" placeholder=\"Send Message\"/>\n                            </div>\n                            <Button className=\"col-sm-4\" variant=\"outline-dark\" type=\"submit\" style={{float: 'right'}}>\n                                Send\n                            </Button>\n                        </Form.Group>\n                    </Form>\n                </div>\n            </div>\n        </div>\n                </Col>\n            </Row>\n\n        </Container>\n    );\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}